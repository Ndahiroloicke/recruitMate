alter table "public"."candidates" drop constraint "fk_recruiter_id";
alter table "public"."campaigns" drop constraint "campaigns_recruiter_id_fkey";
alter table "public"."campaigns_candidates" drop constraint "campaigns_candidates_campaign_id_fkey";
alter table "public"."campaigns_candidates" drop constraint "campaigns_candidates_candidate_id_fkey";
alter table "public"."campaigns_recruiters" drop constraint "campaigns_recruiters_campaign_id_fkey";
alter table "public"."campaigns_recruiters" drop constraint "campaigns_recruiters_recruiter_id_fkey";
alter table "public"."recruiters_candidates" drop constraint "recruiters_candidates_candidate_id_fkey";
alter table "public"."recruiters_candidates" drop constraint "recruiters_candidates_recruiter_id_fkey";
create table "public"."inbox_setting" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "follow_up_duration" integer,
    "target_email" character varying
);
create table "public"."template_email" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "email_subject" text,
    "email_body" text
);
alter table "public"."campaigns" add column "company_logo" text;
alter table "public"."campaigns_candidates" add column "email_replied" boolean default false;
alter table "public"."messages" add column "created_at" timestamp with time zone default now();
alter table "public"."messages" add column "email_read" boolean default false;
alter table "public"."recruiters" add column "avatar" text;
alter table "public"."recruiters" add column "signature_text" text;
alter table "public"."recruiters" add column "tos_accepted" boolean default false;
alter table "public"."recruiters" alter column "auth_id" set data type uuid using "auth_id"::uuid;
alter table "public"."recruiters" enable row level security;
alter table "public"."recruiters_candidates" enable row level security;
CREATE UNIQUE INDEX inbox_setting_pkey ON public.inbox_setting USING btree (id);
CREATE UNIQUE INDEX template_email_pkey ON public.template_email USING btree (id);
alter table "public"."inbox_setting" add constraint "inbox_setting_pkey" PRIMARY KEY using index "inbox_setting_pkey";
alter table "public"."template_email" add constraint "template_email_pkey" PRIMARY KEY using index "template_email_pkey";
alter table "public"."candidates" add constraint "candidates_recruiter_id_fkey" FOREIGN KEY (recruiter_id) REFERENCES recruiters(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;
alter table "public"."candidates" validate constraint "candidates_recruiter_id_fkey";
alter table "public"."recruiters" add constraint "recruiters_auth_id_fkey" FOREIGN KEY (auth_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;
alter table "public"."recruiters" validate constraint "recruiters_auth_id_fkey";
alter table "public"."campaigns" add constraint "campaigns_recruiter_id_fkey" FOREIGN KEY (recruiter_id) REFERENCES recruiters(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;
alter table "public"."campaigns" validate constraint "campaigns_recruiter_id_fkey";
alter table "public"."campaigns_candidates" add constraint "campaigns_candidates_campaign_id_fkey" FOREIGN KEY (campaign_id) REFERENCES campaigns(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;
alter table "public"."campaigns_candidates" validate constraint "campaigns_candidates_campaign_id_fkey";
alter table "public"."campaigns_candidates" add constraint "campaigns_candidates_candidate_id_fkey" FOREIGN KEY (candidate_id) REFERENCES candidates(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;
alter table "public"."campaigns_candidates" validate constraint "campaigns_candidates_candidate_id_fkey";
alter table "public"."campaigns_recruiters" add constraint "campaigns_recruiters_campaign_id_fkey" FOREIGN KEY (campaign_id) REFERENCES campaigns(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;
alter table "public"."campaigns_recruiters" validate constraint "campaigns_recruiters_campaign_id_fkey";
alter table "public"."campaigns_recruiters" add constraint "campaigns_recruiters_recruiter_id_fkey" FOREIGN KEY (recruiter_id) REFERENCES recruiters(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;
alter table "public"."campaigns_recruiters" validate constraint "campaigns_recruiters_recruiter_id_fkey";
alter table "public"."recruiters_candidates" add constraint "recruiters_candidates_candidate_id_fkey" FOREIGN KEY (candidate_id) REFERENCES candidates(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;
alter table "public"."recruiters_candidates" validate constraint "recruiters_candidates_candidate_id_fkey";
alter table "public"."recruiters_candidates" add constraint "recruiters_candidates_recruiter_id_fkey" FOREIGN KEY (recruiter_id) REFERENCES recruiters(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;
alter table "public"."recruiters_candidates" validate constraint "recruiters_candidates_recruiter_id_fkey";
set check_function_bodies = off;
CREATE OR REPLACE FUNCTION public.create_recruiter_on_user_insert()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$BEGIN
    -- Insert a new recruiter record with role and email
    INSERT INTO public.recruiters (auth_id, email, role)
    VALUES (
        NEW.id,
        NEW.email,
        CASE
            WHEN NEW.email ILIKE '%@recruitmateai.com' THEN 'admin'
            ELSE 'recruiter'
        END
    );

    RETURN NEW;
END;$function$;
grant delete on table "public"."inbox_setting" to "anon";
grant insert on table "public"."inbox_setting" to "anon";
grant references on table "public"."inbox_setting" to "anon";
grant select on table "public"."inbox_setting" to "anon";
grant trigger on table "public"."inbox_setting" to "anon";
grant truncate on table "public"."inbox_setting" to "anon";
grant update on table "public"."inbox_setting" to "anon";
grant delete on table "public"."inbox_setting" to "authenticated";
grant insert on table "public"."inbox_setting" to "authenticated";
grant references on table "public"."inbox_setting" to "authenticated";
grant select on table "public"."inbox_setting" to "authenticated";
grant trigger on table "public"."inbox_setting" to "authenticated";
grant truncate on table "public"."inbox_setting" to "authenticated";
grant update on table "public"."inbox_setting" to "authenticated";
grant delete on table "public"."inbox_setting" to "service_role";
grant insert on table "public"."inbox_setting" to "service_role";
grant references on table "public"."inbox_setting" to "service_role";
grant select on table "public"."inbox_setting" to "service_role";
grant trigger on table "public"."inbox_setting" to "service_role";
grant truncate on table "public"."inbox_setting" to "service_role";
grant update on table "public"."inbox_setting" to "service_role";
grant delete on table "public"."template_email" to "anon";
grant insert on table "public"."template_email" to "anon";
grant references on table "public"."template_email" to "anon";
grant select on table "public"."template_email" to "anon";
grant trigger on table "public"."template_email" to "anon";
grant truncate on table "public"."template_email" to "anon";
grant update on table "public"."template_email" to "anon";
grant delete on table "public"."template_email" to "authenticated";
grant insert on table "public"."template_email" to "authenticated";
grant references on table "public"."template_email" to "authenticated";
grant select on table "public"."template_email" to "authenticated";
grant trigger on table "public"."template_email" to "authenticated";
grant truncate on table "public"."template_email" to "authenticated";
grant update on table "public"."template_email" to "authenticated";
grant delete on table "public"."template_email" to "service_role";
grant insert on table "public"."template_email" to "service_role";
grant references on table "public"."template_email" to "service_role";
grant select on table "public"."template_email" to "service_role";
grant trigger on table "public"."template_email" to "service_role";
grant truncate on table "public"."template_email" to "service_role";
grant update on table "public"."template_email" to "service_role";
create policy "Enable full access"
on "public"."recruiters"
as permissive
for all
to public
using (true);
