alter table "public"."invited_members" drop constraint "invited_member_pkey";
drop index if exists "public"."invited_member_pkey";
create table "public"."teams" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text,
    "description" text,
    "logo" text,
    "team_id" uuid,
    "members" jsonb
);
alter table "public"."teams" enable row level security;
alter table "public"."invited_members" add column "team_id" uuid;
alter table "public"."invited_members" add column "token" uuid not null default gen_random_uuid();
alter table "public"."invited_members" alter column "email" set not null;
CREATE UNIQUE INDEX invited_members_pkey ON public.invited_members USING btree (id, token);
CREATE UNIQUE INDEX invited_members_token_key ON public.invited_members USING btree (token);
CREATE UNIQUE INDEX teams_pkey ON public.teams USING btree (id);
CREATE UNIQUE INDEX teams_team_id_key ON public.teams USING btree (team_id);
alter table "public"."invited_members" add constraint "invited_members_pkey" PRIMARY KEY using index "invited_members_pkey";
alter table "public"."teams" add constraint "teams_pkey" PRIMARY KEY using index "teams_pkey";
alter table "public"."invited_members" add constraint "invited_members_team_id_fkey" FOREIGN KEY (team_id) REFERENCES teams(team_id) not valid;
alter table "public"."invited_members" validate constraint "invited_members_team_id_fkey";
alter table "public"."invited_members" add constraint "invited_members_token_key" UNIQUE using index "invited_members_token_key";
alter table "public"."teams" add constraint "teams_description_check" CHECK ((length(description) <= 300)) not valid;
alter table "public"."teams" validate constraint "teams_description_check";
alter table "public"."teams" add constraint "teams_name_check" CHECK ((length(name) <= 50)) not valid;
alter table "public"."teams" validate constraint "teams_name_check";
alter table "public"."teams" add constraint "teams_team_id_key" UNIQUE using index "teams_team_id_key";
grant delete on table "public"."teams" to "anon";
grant insert on table "public"."teams" to "anon";
grant references on table "public"."teams" to "anon";
grant select on table "public"."teams" to "anon";
grant trigger on table "public"."teams" to "anon";
grant truncate on table "public"."teams" to "anon";
grant update on table "public"."teams" to "anon";
grant delete on table "public"."teams" to "authenticated";
grant insert on table "public"."teams" to "authenticated";
grant references on table "public"."teams" to "authenticated";
grant select on table "public"."teams" to "authenticated";
grant trigger on table "public"."teams" to "authenticated";
grant truncate on table "public"."teams" to "authenticated";
grant update on table "public"."teams" to "authenticated";
grant delete on table "public"."teams" to "service_role";
grant insert on table "public"."teams" to "service_role";
grant references on table "public"."teams" to "service_role";
grant select on table "public"."teams" to "service_role";
grant trigger on table "public"."teams" to "service_role";
grant truncate on table "public"."teams" to "service_role";
grant update on table "public"."teams" to "service_role";
